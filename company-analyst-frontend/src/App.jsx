import React, { useState } from "react";
import {
  Card, CardHeader, CardTitle, CardContent,
} from "./components/ui/card";
import { Input } from "./components/ui/input";
import { Button } from "./components/ui/button";
import { Badge } from "./components/ui/badge";
import { Label } from "./components/ui/label";
import { Separator } from "./components/ui/separator";

export default function App() {
  const [inn, setInn] = useState("");
  const [prediction, setPrediction] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");

  const companyName = inn ? `–ö–æ–º–ø–∞–Ω–∏—è –ò–ù–ù ${inn}` : null;

  async function getPrediction() {
    if (inn.length < 5) return;
    setLoading(true);
    setError("");
    setPrediction(null);
    try {
      const res = await fetch(`http://localhost:8000/predict/${encodeURIComponent(inn)}`);
      const payload = await res.json();
      if (!res.ok) throw new Error(payload.detail || `–û—à–∏–±–∫–∞ ${res.status}`);
      setPrediction(payload);
    } catch (e) {
      setError(e.message);
    } finally {
      setLoading(false);
    }
  }

  const positiveFactors = prediction
    ? prediction.top_features
        .filter(f => f.shap_value < 0)
        .sort((a,b) => Math.abs(b.shap_value) - Math.abs(a.shap_value))
    : [];
  const negativeFactors = prediction
    ? prediction.top_features
        .filter(f => f.shap_value > 0)
        .sort((a,b) => Math.abs(b.shap_value) - Math.abs(a.shap_value))
    : [];

  return (
    <div className="min-h-screen bg-gray-100 p-8 flex flex-col items-center">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
      <div className="w-full max-w-4xl text-center mb-8">
        <h1 className="text-4xl font-extrabold text-gray-900">–ê–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–∞ –¥–µ—Ñ–æ–ª—Ç–∞ –∫–æ–º–ø–∞–Ω–∏–∏</h1>
        <p className="mt-2 text-gray-600">
          –í–≤–µ–¥–∏—Ç–µ –ò–ù–ù –∫–æ–º–ø–∞–Ω–∏–∏, —á—Ç–æ–±—ã –æ—Ü–µ–Ω–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∫–≤–∞–∑–∏-–¥–µ—Ñ–æ–ª—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ 
          –º–∞—à–∏–Ω–Ω–æ–≥–æ —Å–∫–æ—Ä–∏–Ω–≥–∞ –∏ SHAP-–∞–Ω–∞–ª–∏–∑–∞.
        </p>
      </div>

      {/* –ú–µ—Ç–æ–¥–∏–∫–∞ —Ä–∞—Å—á—ë—Ç–∞ */}
      <Card className="w-full max-w-4xl mb-8">
        <CardHeader>
          <CardTitle className="text-2xl">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç</CardTitle>
        </CardHeader>
        <CardContent className="text-gray-700 space-y-4">
          <p>
            –ú—ã –æ–±—É—á–∏–ª–∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π –±—É—Å—Ç–∏–Ω–≥ –Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π. 
            –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ò–ù–ù –º–æ–¥–µ–ª—å –≤—ã–¥–∞—ë—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–µ—Ñ–æ–ª—Ç–∞, –∞ SHAP-–∞–Ω–∞–ª–∏–∑ 
            –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞–∏–±–æ–ª–µ–µ –≤–ª–∏—è—é—Ç –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ:
          </p>
          <ul className="list-disc list-inside space-y-1">
            <li><strong>SHAP –±–æ–ª—å—à–µ 0</strong> ‚Äî —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Ä–∏—Å–∫ –¥–µ—Ñ–æ–ª—Ç–∞;</li>
            <li><strong>SHAP –º–µ–Ω—å—à–µ 0</strong> ‚Äî —Å–Ω–∏–∂–∞–µ—Ç —Ä–∏—Å–∫ –¥–µ—Ñ–æ–ª—Ç–∞.</li>
          </ul>
          <p className="text-sm text-gray-500">
            –ú–µ—Ç–æ–¥–∏–∫–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –ø—Ä–∏–Ω—Ü–∏–ø–∞—Ö fair-credit-scoring –∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º–æ—Å—Ç–∏ –º–æ–¥–µ–ª–∏.
          </p>
        </CardContent>
      </Card>

      <Card className="w-full max-w-4xl mb-8 shadow-md border border-gray-200 rounded-xl">
  <CardHeader className="border-b border-gray-100 pb-4">
    <CardTitle className="text-2xl font-bold text-gray-900 text-center">
      üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ –ò–ù–ù
    </CardTitle>
  </CardHeader>

  <CardContent className="p-6 space-y-6">
    <div className="flex flex-col md:flex-row md:items-end md:space-x-4 space-y-4 md:space-y-0">
      <div className="flex-1">
        <Label
          htmlFor="inn"
          className="block text-sm font-medium text-gray-700 mb-1"
        >
          –í–≤–µ–¥–∏—Ç–µ –ò–ù–ù –∫–æ–º–ø–∞–Ω–∏–∏
        </Label>
        <Input
          id="inn"
          type="text"
          inputMode="numeric"
          pattern="[0-9]*"
          value={inn}
          onChange={e => setInn(e.target.value.replace(/\D/g, ""))}
          placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 7728191040"
          className="block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-1 focus:ring-blue-500 text-base px-4 py-2 transition"
        />
      </div>
      <Button
        onClick={getPrediction}
        disabled={inn.length < 5 || loading}
        className="px-6 py-2.5 rounded-md bg-blue-600 text-white font-semibold hover:bg-blue-700 transition disabled:opacity-50"
      >
        {loading ? "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞..." : "üìä –£–∑–Ω–∞—Ç—å —Ä–∏—Å–∫"}
      </Button>
    </div>

    {error && (
      <div className="text-sm text-red-700 bg-red-50 border border-red-200 px-4 py-2 rounded-md">
        {error}
      </div>
    )}
  </CardContent>
</Card>




      {prediction && (
        <Card className="w-full max-w-4xl mb-8 shadow-md">
          <CardHeader className="pb-4 border-b border-gray-200">
            {/* –ì–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ ‚Äî –∏–º—è –∫–æ–º–ø–∞–Ω–∏–∏ */}
            {companyName && (
              <div className="w-full text-center text-3xl font-extrabold text-gray-900 mb-2">
                {companyName}
              </div>
            )}

            {/* –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫–æ—Ä–∏–Ω–≥–∞ */}
            <div className="flex items-center justify-center space-x-3">
              {prediction.predicted_class === 1 ? (
                <Badge className="bg-red-100 text-red-800 border border-red-200 px-4 py-1 rounded-full text-sm font-medium">
                  –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫
                </Badge>
              ) : (
                <Badge className="bg-green-100 text-green-800 border border-green-200 px-4 py-1 rounded-full text-sm font-medium">
                  –ù–∏–∑–∫–∏–π —Ä–∏—Å–∫
                </Badge>
              )}
            </div>
          </CardHeader>

          <CardContent className="space-y-6">
  {/* –û–±—â–∏–π –ø–æ—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç */}
  <p className="text-gray-600">
    –ù–∏–∂–µ –ø–æ–∫–∞–∑–∞–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ <strong className="text-green-700">—Å–Ω–∏–∂–∞—é—Ç —Ä–∏—Å–∫</strong> –¥–µ—Ñ–æ–ª—Ç–∞ –∏ —Ç–µ, —á—Ç–æ <strong className="text-red-700">–ø–æ–≤—ã—à–∞—é—Ç —Ä–∏—Å–∫</strong>. 
    –ß–µ–º –±–æ–ª—å—à–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ SHAP-–∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–µ–º —Å–∏–ª—å–Ω–µ–µ –≤–ª–∏—è–Ω–∏–µ.
  </p>

  <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
    {/* –ë–ª–æ–∫ ¬´–°–Ω–∏–∂–∞—é—Ç —Ä–∏—Å–∫¬ª */}
    <div className="bg-green-100 p-6 rounded-lg border border-green-200">
      <h3 className="text-xl font-semibold text-green-900 mb-2">
        üåü –§–∞–∫—Ç–æ—Ä—ã, —Å–Ω–∏–∂–∞—é—â–∏–µ —Ä–∏—Å–∫
      </h3>
      <Separator className="mb-4" />
      {positiveFactors.length ? positiveFactors.map(f => (
        <div key={f.feature} className="mb-4 p-4 bg-white rounded-md shadow-sm hover:shadow-md transition">
          <div className="text-2xl font-bold text-green-800">
            {f.feature_value.toFixed(2)}
          </div>
          <div className="mt-1 text-sm font-medium text-green-700">
            {f.feature}
          </div>
          <div className="text-xs text-gray-500 mt-1">
            SHAP –≤–∫–ª–∞–¥: <span className="font-mono">{f.shap_value.toFixed(3)}</span>
          </div>
        </div>
      )) : (
        <div className="text-sm text-green-700">–ù–µ—Ç –∑–∞–º–µ—Ç–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, —Å–Ω–∏–∂–∞—é—â–∏—Ö —Ä–∏—Å–∫</div>
      )}
    </div>

    {/* –ë–ª–æ–∫ ¬´–ü–æ–≤—ã—à–∞—é—Ç —Ä–∏—Å–∫¬ª */}
    <div className="bg-red-100 p-6 rounded-lg border border-red-200">
      <h3 className="text-xl font-semibold text-red-900 mb-2">
        ‚ö†Ô∏è –§–∞–∫—Ç–æ—Ä—ã, –ø–æ–≤—ã—à–∞—é—â–∏–µ —Ä–∏—Å–∫
      </h3>
      <Separator className="mb-4" />
      {negativeFactors.length ? negativeFactors.map(f => (
        <div key={f.feature} className="mb-4 p-4 bg-white rounded-md shadow-sm hover:shadow-md transition">
          <div className="text-2xl font-bold text-red-800">
            {f.feature_value.toFixed(2)}
          </div>
          <div className="mt-1 text-sm font-medium text-red-700">
            {f.feature}
          </div>
          <div className="text-xs text-gray-500 mt-1">
            SHAP –≤–∫–ª–∞–¥: <span className="font-mono">{f.shap_value.toFixed(3)}</span>
          </div>
        </div>
      )) : (
        <div className="text-sm text-red-700">–ù–µ—Ç –∑–∞–º–µ—Ç–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, –ø–æ–≤—ã—à–∞—é—â–∏—Ö —Ä–∏—Å–∫</div>
      )}
    </div>
  </div>

  {/* –§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ—è—Å–Ω–µ–Ω–∏–µ */}
  <p className="text-gray-500 text-sm">
    * SHAP-–∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–∑–Ω–∞–∫ –∏–∑–º–µ–Ω–∏–ª –ø—Ä–æ–≥–Ω–æ–∑ –º–æ–¥–µ–ª–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Å—Ä–µ–¥–Ω–µ–≥–æ:  
    –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ ‚Üí —Å–Ω–∏–∑–∏–ª —Ä–∏—Å–∫, –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ ‚Üí –ø–æ–≤—ã—Å–∏–ª —Ä–∏—Å–∫.  
    –≠—Ç–∏ —Ñ–∞–∫—Ç–æ—Ä—ã –ø–æ–º–æ–≥—É—Ç –≤–∞–º –ø–æ–Ω—è—Ç—å, –≥–¥–µ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏ —É–ª—É—á—à–µ–Ω–∏–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏.
  </p>
</CardContent>

        </Card>
      )}
    </div>
  );
}
